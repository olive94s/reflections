What happens when you initialize a repository? Why do you need to do it?

	When you initialize a repository every file inside is listed as untracked. 
	The reason we need to do that is because the repository is where people can
	grab your code to collabote with.

How is the staging area different from the working directory and the repository? What 
value do you think it offers?

	The staging area is where you can put a collection of things then put into the repository.
	It would allow a commit to pertain to a collective idea better.

How can you use the staging area to make sure you have one commit per logical change?
	
	With the help of the staging area, we would be able to put things that follow
	the same logic into one commit and add them together rather than separately.

What are some situations when branches would be helpful in keeping your history organized? How would 
branches help?
	
	Branches would be helpful in organization because it would allow a person to split up the project. 
	It could look like there being a new function that is being worked on in a branch and another function 
	in another. They will not interfere with each other and thus keeping them organized. 

How do the diagrams help you visualize the branch structure?
	
	It helps to see which branches are accessable and which are not.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

	By merging two branches together it makes a bridge that connects the two of them together.
	We repsent it in the diagram the way we do because they make a new node that has them combined
	while they still have their own versions.

What are the pros and cons of Git's automatic merging vs. always doing emrges manually?

	Pros is that you can merge things a lot faster and more effieciently, problem is that 
	there are places where things are ambiguous and Git is not going to know how to deal with
	that.